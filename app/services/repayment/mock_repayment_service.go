// Code generated by MockGen. DO NOT EDIT.
// Source: app/services/repayment/service.go

// Package repayment_service is a generated GoMock package.
package repayment_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/nishanthrk/aspire-lms/app/dto"
	models "github.com/nishanthrk/aspire-lms/app/models"
)

// MockRepaymentService is a mock of RepaymentService interface.
type MockRepaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockRepaymentServiceMockRecorder
}

// MockRepaymentServiceMockRecorder is the mock recorder for MockRepaymentService.
type MockRepaymentServiceMockRecorder struct {
	mock *MockRepaymentService
}

// NewMockRepaymentService creates a new mock instance.
func NewMockRepaymentService(ctrl *gomock.Controller) *MockRepaymentService {
	mock := &MockRepaymentService{ctrl: ctrl}
	mock.recorder = &MockRepaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepaymentService) EXPECT() *MockRepaymentServiceMockRecorder {
	return m.recorder
}

// CalculateRepaymentSchedule mocks base method.
func (m *MockRepaymentService) CalculateRepaymentSchedule(application *models.LoanApplication) ([]models.Repayment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculateRepaymentSchedule", application)
	ret0, _ := ret[0].([]models.Repayment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalculateRepaymentSchedule indicates an expected call of CalculateRepaymentSchedule.
func (mr *MockRepaymentServiceMockRecorder) CalculateRepaymentSchedule(application interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculateRepaymentSchedule", reflect.TypeOf((*MockRepaymentService)(nil).CalculateRepaymentSchedule), application)
}

// UpdateRepayment mocks base method.
func (m *MockRepaymentService) UpdateRepayment(request dto.RepaymentRequest, user models.User) (dto.RepaymentResponse, dto.HandleError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRepayment", request, user)
	ret0, _ := ret[0].(dto.RepaymentResponse)
	ret1, _ := ret[1].(dto.HandleError)
	return ret0, ret1
}

// UpdateRepayment indicates an expected call of UpdateRepayment.
func (mr *MockRepaymentServiceMockRecorder) UpdateRepayment(request, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRepayment", reflect.TypeOf((*MockRepaymentService)(nil).UpdateRepayment), request, user)
}
